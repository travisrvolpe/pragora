version: '3.8'

services:
  # Frontend Next.js application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - pragora_net

  # FastAPI backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/pragora
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    depends_on:
      - db
      - redis
    networks:
      - pragora_net

  # PostgreSQL database
  db:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=pragora
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Add custom initialization scripts if needed
      - ./backend/db/init:/docker-entrypoint-initdb.d
    networks:
      - pragora_net

  # Redis for caching and real-time features
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - pragora_net

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@pragora.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - pragora_net

  # Jupyter Lab for ML development (optional)
  jupyter:
    build:
      context: ./ml
      dockerfile: Dockerfile.jupyter
    volumes:
      - ./ml:/work
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
    networks:
      - pragora_net

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  pragora_net:
    driver: bridge

# Add development-specific configurations
x-development:
  backend:
    command: uvicorn main:app --reload --host 0.0.0.0 --port 8000
  frontend:
    command: npm run dev
